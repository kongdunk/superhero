import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import axios from "axios";
import { use, useEffect, useState } from "react";
import Lottie from "lottie-react";
import LoadingAnimation from "../public/loading.json";
import useSound from "use-sound";
import { bgImages } from "../public/bg";
import useStore from "../src/store";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

import Card from "../components/card";

export default function Home() {
  const router = useRouter();

  var key = "5714346188686087";
  const [data, setData] = useState({});
  const [name, setName] = useState("");
  const [playerUrl, setPlayerUrl] = useState("");
  const playerCard = useStore((state) => state.playerCard);
  const setPlayerCard = useStore((state) => state.setPlayerCard);
  const botCard = useStore((state) => state.botCard);
  const setBotCard = useStore((state) => state.setBotCard);
  const [cardOption1, setCardOption1] = useState({});
  const [cardOption2, setCardOption2] = useState({});
  const [cardOption3, setCardOption3] = useState({});
  const [cardOption4, setCardOption4] = useState({});
  const [cardOption5, setCardOption5] = useState({});
  const cardPower = useStore((state) => state.cardPower);
  const botPower = useStore((state) => state.botPower);
  const setCardPower = useStore((state) => state.setCardPower);
  const [loading, setLoading] = useState(true);
  const [quote, setQuote] = useState("");
  const words = useStore((state) => state.words);
  //SHOWS SELECTED CARD
  const [showCard, setShowCard] = useState(false);
  const [showCaption, setCaption] = useState(false);

  // BUTTON COLOE CHANGE
  const [color, setColor] = useState("gray");
  const handleColor = () => {
    setColor(color === "gray" ? "#d10a0a" : "#d10a0a");
  };

  //SOUND
  const [sword] = useSound("/sounds/sword.mp3");

  //BG Image
  const [bg, setBg] = useState(Math.floor(Math.random() * 4));

  /* FUNCTION FOR CALLING SUPERHERO API DATA TO cardOptions */
  function setCharacter(setcardoption, characterID) {
    useEffect(() => {
      //axios.get('https://superheroapi.com/api/5714346188686087/search/iron%20man')
      axios
        .get(`https://superheroapi.com/api.php/${key}/${characterID}`)
        .then((response) => {
          console.log(response.data);
          setcardoption(response.data);
        })
        .catch((err) => {
          console.log(err);
        });
    }, []);
  }

  function getQuote() {
    useEffect(() => {
      axios
        .get("https://www.affirmations.dev/")
        .then((response) => {
          console.log(response);
          setQuote(response);
        })
        .catch((err) => {
          console.log(err);
        });
    }, []);
  }

  //CALCULATES SELECTED CARDS TOTAL POWERSTAT
  function calculatePower(player) {
    var power = 0;
    var stats = [];

    stats.push(player.powerstats.combat);
    stats.push(player.powerstats.durability);
    stats.push(player.powerstats.intelligence);
    stats.push(player.powerstats.power);
    stats.push(player.powerstats.speed);
    stats.push(player.powerstats.strength);

    stats.forEach((stat) => {
      const num = parseInt(stat);
      power += num;
    });
    setCardPower(power);
  }
  useEffect(() => {
    setName(playerCard.name);
    setPlayerUrl(playerCard.image.url);
  }, []);
  //LOADING ANIMATION TIME
  useEffect(() => {
    setTimeout(() => {
      setLoading(false);
    }, 2000);
  });

  useEffect(() => {
    setTimeout(() => {
      handleColor();
    }, 5000);
  });

  getQuote();

  //LOADING PAGE
  if (loading) {
    return (
      <div className="loadingCont">
        <div className="quote">{quote}</div>
        <Lottie
          className="loader"
          style={{ width: 500, height: 500 }}
          animationData={LoadingAnimation}
          loop={true}
        />
        <img className="loadingSplash" src="../placeholder.jpg" />
      </div>
    );
  }

  //CARD SELECTION
  return (
    <>
      <Head>
        <title>Superhero Battle</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="pageCont">
          <div className="previewCont">
            <div className="playerSelectCont">
              <div
                className="botCont"
                style={
                  cardPower < botPower
                    ? { filter: "brightness(30%)" }
                    : { boxShadow: "0 0 50px 10px #0cb5f2" }
                }
              >
                <Card
                  className="card-animate"
                  name={name}
                  src={playerUrl}
                  power={cardPower}
                />
              </div>
              {showCaption ? (
                <h4> Your Superhero: {playerCard.name} </h4>
              ) : null}
            </div>
            <div
              className="botCont"
              style={
                cardPower > botPower
                  ? { filter: "brightness(30%)" }
                  : { boxShadow: "0 0 50px 5px rgba(255, 0, 0, 1)" }
              }
            >
              <Card
                name={botCard.name}
                src={botCard.image.url}
                power={botPower}
              />
            </div>

            {cardPower !== null && botPower !== null && (
              <p>
                {cardPower > botPower ? (
                  <span className="header">You Win!</span>
                ) : cardPower < botPower ? (
                  <span className="header">You Lose!</span>
                ) : (
                  <span className="header">"It's a tie!" </span>
                )}
              </p>
            )}
          </div>

          <button
            className="battleButton"
            style={{ backgroundColor: color }}
            title="Select a Character and Start!"
            onClick={async () => {
              if (color === "#d10a0a") {
                {
                  sword("public/sounds/sword.mp3");
                }
                router.push("http://localhost:3000/selection");
              }
            }}
          >
            Battle
          </button>
          <button onClick={() => console.log(playerCard)}>player </button>

          <img className="bgImg" src={bgImages[bg].imageUrl} />
        </div>
      </main>
    </>
  );
}
